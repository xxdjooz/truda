group 'com.example.anythink_sdk'
version '1.0'

buildscript {
    repositories {
        google()
        jcenter()


        //Anythink(Core)
        maven {
            url "https://anythink.jfrog.io/artifactory/android_sdk"
        }

        //Vungle
        maven {
            url "https://s01.oss.sonatype.org/content/groups/staging/"
        }

        //Pangle
        maven {
            url "https://artifact.bytedance.com/repository/pangle"
        }

        //Mintegral
        maven {
            url "https://dl-maven-android.mintegral.com/repository/mbridge_android_sdk_oversea"
        }

    }

    dependencies {
        classpath 'com.android.tools.build:gradle:4.1.0'
    }
}

rootProject.allprojects {
    repositories {
        google()
        jcenter()


        //Anythink(Core)
        maven {
            url "https://anythink.jfrog.io/artifactory/android_sdk"
        }

        //Vungle
        maven {
            url "https://s01.oss.sonatype.org/content/groups/staging/"
        }

        //Pangle
        maven {
            url "https://artifact.bytedance.com/repository/pangle"
        }

        //Mintegral
        maven {
            url "https://dl-maven-android.mintegral.com/repository/mbridge_android_sdk_oversea"
        }

    }
}

apply plugin: 'com.android.library'

android {
    compileSdkVersion 30

    defaultConfig {
        minSdkVersion 16
    }
}


//获取local.properties配置文件
def localProperties = new Properties()
def localPropertiesFile = rootProject.file('local.properties')
if (localPropertiesFile.exists()) {
    localPropertiesFile.withReader('UTF-8') { reader ->
        localProperties.load(reader)
    }
}
//获取flutter的sdk路径
def flutterRoot = localProperties.getProperty('flutter.sdk')
if (flutterRoot == null) {
    throw new GradleException("Flutter SDK not found. Define location with flutter.sdk in the local.properties file.")
}

dependencies {
//    compileOnly 'com.android.support:appcompat-v7:28.0.0'
    compileOnly fileTree(dir: 'libs', include: '*.aar')
    compileOnly fileTree(dir: 'libs_compile', include: '*.jar')
    compileOnly 'androidx.annotation:annotation:1.1.0'

    //Anythink (Necessary)
    api "com.anythink.sdk:core:6.1.68"
    api "com.anythink.sdk:nativead:6.1.68"
    api "com.anythink.sdk:banner:6.1.68"
    api "com.anythink.sdk:interstitial:6.1.68"
    api "com.anythink.sdk:rewardedvideo:6.1.68"
    api "com.anythink.sdk:splash:6.1.68"

    //Androidx (Necessary)
    api "androidx.appcompat:appcompat:1.1.0"
    api "androidx.browser:browser:1.0.0"

    //Vungle
    api "com.anythink.sdk:adapter-vungle:6.1.68"
    api "com.vungle:publisher-sdk-android:6.12.1"
    api "androidx.core:core:1.3.2"
    api "androidx.localbroadcastmanager:localbroadcastmanager:1.0.0"
    api "com.google.android.gms:play-services-basement:18.1.0"
    api "com.google.android.gms:play-services-ads-identifier:18.0.1"

    //Pangle
    api "com.anythink.sdk:adapter-pangle-nonchina:6.1.68"
    api "com.pangle.global:ads-sdk:5.0.0.6"
    api "com.google.android.gms:play-services-ads-identifier:18.0.1"

    //Admob
    api "com.anythink.sdk:adapter-admob:6.1.68"
    api "com.google.android.gms:play-services-ads:21.5.0"

    //Mintegral
    api "com.anythink.sdk:adapter-mintegral-nonchina:6.1.68"
    api "com.mbridge.msdk.oversea:reward:16.3.61"
    api "com.mbridge.msdk.oversea:newinterstitial:16.3.61"
    api "com.mbridge.msdk.oversea:mbnative:16.3.61"
    api "com.mbridge.msdk.oversea:mbnativeadvanced:16.3.61"
    api "com.mbridge.msdk.oversea:mbsplash:16.3.61"
    api "com.mbridge.msdk.oversea:mbbanner:16.3.61"
    api "com.mbridge.msdk.oversea:mbbid:16.3.61"
    api "androidx.recyclerview:recyclerview:1.1.0"

//Tramini
    api "com.anythink.sdk:tramini-plugin:6.1.68"

}

